name: CI

on:
  push:

permissions:
  contents: write

jobs:
  format:
    runs-on: ubuntu-latest
    steps:
      - name: Generate GitHub App Token
        id: generate_token
        uses: actions/create-github-app-token@v2
        with:
          app-id: ${{ vars.DEV_AUTOMATION_APP_ID }}
          private-key: ${{ secrets.DEV_AUTOMATION_PRIVATE_KEY }}
      
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          token: ${{ steps.generate_token.outputs.token }}
          fetch-depth: 0  # Ensure full history is available for commit
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: temurin
          cache: gradle
      - name: Run Spotless Apply
        run: ./gradlew spotlessApply --no-daemon
      - name: Commit changes if any
        run: |
          git config --global user.name '${{ steps.generate_token.outputs.app-slug }}[bot]'
          git config --global user.email '${{ steps.generate_token.outputs.app-slug }}[bot]@users.noreply.github.com'
          git add .
          if ! git diff --cached --exit-code; then
            git commit -m "style: apply code formatting with Spotless"
            git push
          fi
        env:
          GITHUB_TOKEN: ${{ steps.generate_token.outputs.token }}
  build:
    needs: format
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          submodules: true
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: temurin
          cache: gradle
      - name: Build
        run: ./gradlew clean npmRunBuild build --no-daemon
  build-docker:
    if: github.ref == 'refs/heads/main'
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          submodules: true
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3
      - name: Get short commit hash
        id: vars
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
      - name: Docker build and push
        id: docker_build
        uses: docker/build-push-action@v6
        with:
          context: ./
          file: ./Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}:${{ steps.vars.outputs.sha_short }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: Docker image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
